<?php

/**
 * BaseClaimerDocumentType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $damage_type_id
 * @property string $name
 * @property ClaimerDamageType $DamageType
 * @property Doctrine_Collection $Documents
 * 
 * @method integer             getDamageTypeId()   Returns the current record's "damage_type_id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method ClaimerDamageType   getDamageType()     Returns the current record's "DamageType" value
 * @method Doctrine_Collection getDocuments()      Returns the current record's "Documents" collection
 * @method ClaimerDocumentType setDamageTypeId()   Sets the current record's "damage_type_id" value
 * @method ClaimerDocumentType setName()           Sets the current record's "name" value
 * @method ClaimerDocumentType setDamageType()     Sets the current record's "DamageType" value
 * @method ClaimerDocumentType setDocuments()      Sets the current record's "Documents" collection
 * 
 * @package    claimer
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClaimerDocumentType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('claimer_document_type');
        $this->hasColumn('damage_type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ClaimerDamageType as DamageType', array(
             'local' => 'damage_type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ClaimerDocument as Documents', array(
             'local' => 'id',
             'foreign' => 'type_id'));
    }
}