<?php

/**
 * BaseClaimerCoowner
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $damage_id
 * @property float $percentage
 * @property string $lastname
 * @property string $firstname
 * @property string $email
 * @property string $email_alt
 * @property string $phone
 * @property string $phone_alt
 * @property integer $address_id
 * @property integer $coownercode
 * @property ClaimerDamage $Damage
 * @property ClaimerAddress $Address
 * 
 * @method integer        getDamageId()    Returns the current record's "damage_id" value
 * @method float          getPercentage()  Returns the current record's "percentage" value
 * @method string         getLastname()    Returns the current record's "lastname" value
 * @method string         getFirstname()   Returns the current record's "firstname" value
 * @method string         getEmail()       Returns the current record's "email" value
 * @method string         getEmailAlt()    Returns the current record's "email_alt" value
 * @method string         getPhone()       Returns the current record's "phone" value
 * @method string         getPhoneAlt()    Returns the current record's "phone_alt" value
 * @method integer        getAddressId()   Returns the current record's "address_id" value
 * @method integer        getCoownercode() Returns the current record's "coownercode" value
 * @method ClaimerDamage  getDamage()      Returns the current record's "Damage" value
 * @method ClaimerAddress getAddress()     Returns the current record's "Address" value
 * @method ClaimerCoowner setDamageId()    Sets the current record's "damage_id" value
 * @method ClaimerCoowner setPercentage()  Sets the current record's "percentage" value
 * @method ClaimerCoowner setLastname()    Sets the current record's "lastname" value
 * @method ClaimerCoowner setFirstname()   Sets the current record's "firstname" value
 * @method ClaimerCoowner setEmail()       Sets the current record's "email" value
 * @method ClaimerCoowner setEmailAlt()    Sets the current record's "email_alt" value
 * @method ClaimerCoowner setPhone()       Sets the current record's "phone" value
 * @method ClaimerCoowner setPhoneAlt()    Sets the current record's "phone_alt" value
 * @method ClaimerCoowner setAddressId()   Sets the current record's "address_id" value
 * @method ClaimerCoowner setCoownercode() Sets the current record's "coownercode" value
 * @method ClaimerCoowner setDamage()      Sets the current record's "Damage" value
 * @method ClaimerCoowner setAddress()     Sets the current record's "Address" value
 * 
 * @package    claimer
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClaimerCoowner extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('claimer_coowner');
        $this->hasColumn('damage_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('percentage', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('lastname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('firstname', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email_alt', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('phone', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('phone_alt', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('address_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('coownercode', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));


        $this->index('coownercode', array(
             'fields' => 'coownercode',
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ClaimerDamage as Damage', array(
             'local' => 'damage_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ClaimerAddress as Address', array(
             'local' => 'address_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT',
             'cascade' => array(
             0 => 'delete',
             )));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}