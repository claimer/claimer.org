<?php

/**
 * BaseClaimerRealestate
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $damage_id
 * @property integer $realestate_type_id
 * @property string $realestate_type_other
 * @property integer $realestate_value_before_id
 * @property integer $realestate_value_after_id
 * @property ClaimerDamage $Damage
 * @property ClaimerRealestateType $RealestateType
 * @property ClaimerValue $ValueBefore
 * @property ClaimerValue $ValueAfter
 * 
 * @method integer               getDamageId()                   Returns the current record's "damage_id" value
 * @method integer               getRealestateTypeId()           Returns the current record's "realestate_type_id" value
 * @method string                getRealestateTypeOther()        Returns the current record's "realestate_type_other" value
 * @method integer               getRealestateValueBeforeId()    Returns the current record's "realestate_value_before_id" value
 * @method integer               getRealestateValueAfterId()     Returns the current record's "realestate_value_after_id" value
 * @method ClaimerDamage         getDamage()                     Returns the current record's "Damage" value
 * @method ClaimerRealestateType getRealestateType()             Returns the current record's "RealestateType" value
 * @method ClaimerValue          getValueBefore()                Returns the current record's "ValueBefore" value
 * @method ClaimerValue          getValueAfter()                 Returns the current record's "ValueAfter" value
 * @method ClaimerRealestate     setDamageId()                   Sets the current record's "damage_id" value
 * @method ClaimerRealestate     setRealestateTypeId()           Sets the current record's "realestate_type_id" value
 * @method ClaimerRealestate     setRealestateTypeOther()        Sets the current record's "realestate_type_other" value
 * @method ClaimerRealestate     setRealestateValueBeforeId()    Sets the current record's "realestate_value_before_id" value
 * @method ClaimerRealestate     setRealestateValueAfterId()     Sets the current record's "realestate_value_after_id" value
 * @method ClaimerRealestate     setDamage()                     Sets the current record's "Damage" value
 * @method ClaimerRealestate     setRealestateType()             Sets the current record's "RealestateType" value
 * @method ClaimerRealestate     setValueBefore()                Sets the current record's "ValueBefore" value
 * @method ClaimerRealestate     setValueAfter()                 Sets the current record's "ValueAfter" value
 * 
 * @package    claimer
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClaimerRealestate extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('claimer_realestate');
        $this->hasColumn('damage_id', 'integer', null, array(
             'type' => 'integer',
             'unique' => true,
             'notnull' => true,
             ));
        $this->hasColumn('realestate_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('realestate_type_other', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('realestate_value_before_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('realestate_value_after_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ClaimerDamage as Damage', array(
             'local' => 'damage_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ClaimerRealestateType as RealestateType', array(
             'local' => 'realestate_type_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('ClaimerValue as ValueBefore', array(
             'local' => 'realestate_value_before_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT',
             'cascade' => array(
             0 => 'delete',
             )));

        $this->hasOne('ClaimerValue as ValueAfter', array(
             'local' => 'realestate_value_after_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT',
             'cascade' => array(
             0 => 'delete',
             )));
    }
}