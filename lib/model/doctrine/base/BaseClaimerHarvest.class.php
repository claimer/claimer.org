<?php

/**
 * BaseClaimerHarvest
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $damage_id
 * @property string $harvest_crops
 * @property integer $harvest_feed_before
 * @property integer $harvest_feed_after
 * @property integer $harvest_value_before_id
 * @property integer $harvest_value_after_id
 * @property string $harvest_permanent
 * @property string $harvest_living_today
 * @property integer $harvest_value_month_id
 * @property integer $harvest_value_need_id
 * @property ClaimerDamage $Damage
 * @property ClaimerValue $ValueBefore
 * @property ClaimerValue $ValueAfter
 * @property ClaimerValue $ValueMonth
 * @property ClaimerValue $ValueNeed
 * 
 * @method integer        getDamageId()                Returns the current record's "damage_id" value
 * @method string         getHarvestCrops()            Returns the current record's "harvest_crops" value
 * @method integer        getHarvestFeedBefore()       Returns the current record's "harvest_feed_before" value
 * @method integer        getHarvestFeedAfter()        Returns the current record's "harvest_feed_after" value
 * @method integer        getHarvestValueBeforeId()    Returns the current record's "harvest_value_before_id" value
 * @method integer        getHarvestValueAfterId()     Returns the current record's "harvest_value_after_id" value
 * @method string         getHarvestPermanent()        Returns the current record's "harvest_permanent" value
 * @method string         getHarvestLivingToday()      Returns the current record's "harvest_living_today" value
 * @method integer        getHarvestValueMonthId()     Returns the current record's "harvest_value_month_id" value
 * @method integer        getHarvestValueNeedId()      Returns the current record's "harvest_value_need_id" value
 * @method ClaimerDamage  getDamage()                  Returns the current record's "Damage" value
 * @method ClaimerValue   getValueBefore()             Returns the current record's "ValueBefore" value
 * @method ClaimerValue   getValueAfter()              Returns the current record's "ValueAfter" value
 * @method ClaimerValue   getValueMonth()              Returns the current record's "ValueMonth" value
 * @method ClaimerValue   getValueNeed()               Returns the current record's "ValueNeed" value
 * @method ClaimerHarvest setDamageId()                Sets the current record's "damage_id" value
 * @method ClaimerHarvest setHarvestCrops()            Sets the current record's "harvest_crops" value
 * @method ClaimerHarvest setHarvestFeedBefore()       Sets the current record's "harvest_feed_before" value
 * @method ClaimerHarvest setHarvestFeedAfter()        Sets the current record's "harvest_feed_after" value
 * @method ClaimerHarvest setHarvestValueBeforeId()    Sets the current record's "harvest_value_before_id" value
 * @method ClaimerHarvest setHarvestValueAfterId()     Sets the current record's "harvest_value_after_id" value
 * @method ClaimerHarvest setHarvestPermanent()        Sets the current record's "harvest_permanent" value
 * @method ClaimerHarvest setHarvestLivingToday()      Sets the current record's "harvest_living_today" value
 * @method ClaimerHarvest setHarvestValueMonthId()     Sets the current record's "harvest_value_month_id" value
 * @method ClaimerHarvest setHarvestValueNeedId()      Sets the current record's "harvest_value_need_id" value
 * @method ClaimerHarvest setDamage()                  Sets the current record's "Damage" value
 * @method ClaimerHarvest setValueBefore()             Sets the current record's "ValueBefore" value
 * @method ClaimerHarvest setValueAfter()              Sets the current record's "ValueAfter" value
 * @method ClaimerHarvest setValueMonth()              Sets the current record's "ValueMonth" value
 * @method ClaimerHarvest setValueNeed()               Sets the current record's "ValueNeed" value
 * 
 * @package    claimer
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClaimerHarvest extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('claimer_harvest');
        $this->hasColumn('damage_id', 'integer', null, array(
             'type' => 'integer',
             'unique' => true,
             'notnull' => true,
             ));
        $this->hasColumn('harvest_crops', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('harvest_feed_before', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('harvest_feed_after', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('harvest_value_before_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('harvest_value_after_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('harvest_permanent', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('harvest_living_today', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('harvest_value_month_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('harvest_value_need_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ClaimerDamage as Damage', array(
             'local' => 'damage_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ClaimerValue as ValueBefore', array(
             'local' => 'harvest_value_before_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT',
             'cascade' => array(
             0 => 'delete',
             )));

        $this->hasOne('ClaimerValue as ValueAfter', array(
             'local' => 'harvest_value_after_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT',
             'cascade' => array(
             0 => 'delete',
             )));

        $this->hasOne('ClaimerValue as ValueMonth', array(
             'local' => 'harvest_value_month_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT',
             'cascade' => array(
             0 => 'delete',
             )));

        $this->hasOne('ClaimerValue as ValueNeed', array(
             'local' => 'harvest_value_need_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT',
             'cascade' => array(
             0 => 'delete',
             )));
    }
}