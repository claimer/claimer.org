<?php

/**
 * BaseClaimerCurrency
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $code
 * @property string $name
 * @property Doctrine_Collection $Values
 * @property Doctrine_Collection $FromRates
 * @property Doctrine_Collection $ToRates
 * 
 * @method string              getCode()      Returns the current record's "code" value
 * @method string              getName()      Returns the current record's "name" value
 * @method Doctrine_Collection getValues()    Returns the current record's "Values" collection
 * @method Doctrine_Collection getFromRates() Returns the current record's "FromRates" collection
 * @method Doctrine_Collection getToRates()   Returns the current record's "ToRates" collection
 * @method ClaimerCurrency     setCode()      Sets the current record's "code" value
 * @method ClaimerCurrency     setName()      Sets the current record's "name" value
 * @method ClaimerCurrency     setValues()    Sets the current record's "Values" collection
 * @method ClaimerCurrency     setFromRates() Sets the current record's "FromRates" collection
 * @method ClaimerCurrency     setToRates()   Sets the current record's "ToRates" collection
 * 
 * @package    claimer
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClaimerCurrency extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('claimer_currency');
        $this->hasColumn('code', 'string', 3, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 3,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));


        $this->index('code', array(
             'fields' => 'code',
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'INNODB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ClaimerValue as Values', array(
             'local' => 'id',
             'foreign' => 'currency_id'));

        $this->hasMany('ClaimerRate as FromRates', array(
             'local' => 'id',
             'foreign' => 'currency_from_id'));

        $this->hasMany('ClaimerRate as ToRates', array(
             'local' => 'id',
             'foreign' => 'currency_to_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}