<?php

/**
 * sfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    claimer
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class sfGuardUser extends PluginsfGuardUser
{
  public function preDelete($event)
  {
    foreach ($this->getDamages() as $damage)
    {
      $damage->delete();
    }
  }
  
  public function isSuperAdministrator()
  {
    return $this->hasGroup("super_administrators");
  }
  
  public function isAdministrator()
  {
    return $this->hasGroup("administrators");
  }
  
  public function isRegistrant()
  {
    return $this->hasGroup("registrants");
  }
  
  public function isClaimant()
  {
    return $this->hasGroup("claimants");
  }
  
  public function isManagerOfUser(sfGuardUser $user)
  {
    return $user->hasManager() && $this->getId() == $user->getManager()->getId();
  }
  
  public function hasManager()
  {
    return $this->relatedExists('Profile') && $this->getProfile()->relatedExists('Manager');
  }
  
  public function getManager()
  {
    if (! $this->hasManager())
    {
      return null;
    }
    
    return $this->getProfile()->getManager();
  }
  
  public function manageUser(sfGuardUser $user)
  {
    $user->setManager($this);

    return $user->hasManager() && $user->getManager()->getId() === $this->getId();
  }
  
  public function setManager(sfGuardUser $user = null)
  {
    if ($user === null ||
        ($this !== $user && ! $user->hasManager()))
    {
      $this->getProfile()->setManager($user);
    }
  }
  
  public function hasManagedUsers()
  {
    return $this->getManagedUsersQuery()->count() > 0;
  }
  
  public function getManagedUsersQuery()
  {
    return Doctrine_Core::getTable('sfGuardUser')->getUsersByManagerIdQuery($this->getId());
  }
  
  public function hasManagedDamages()
  {
    return $this->getManagedDamagesQuery()->count() > 0;
  }
  
  public function getManagedDamagesQuery()
  {
    return Doctrine_Core::getTable('ClaimerDamage')->getDamagesByManagerIdQuery($this->getId());
  }
  
  public function hasDamages()
  {
    return $this->getDamagesQuery()->count() > 0;
  }
  
  public function getDamagesQuery()
  {
    return Doctrine_Core::getTable('ClaimerDamage')->getDamagesByClaimantIdQuery($this->getId());
  }
  
  public function getMailsQuery()
  {
    return Doctrine_Core::getTable('ClaimerMail')->getMailsBySenderIdQuery($this->getId());
  }
}
